{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n    case ACTIONS.GET_DATA:\n    case ACTIONS.ERROR:\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  dispatch({\n    type: 'hello',\n    payload: {\n      x: 3\n    }\n  });\n  return {\n    jobs: [],\n    loading: false,\n    error: false\n  };\n}\n\n_s(useFetchJobs, \"obrs/+YaLhfARPAv0nZXhVQD5MY=\");","map":{"version":3,"sources":["/Users/therandomfool/Desktop/code projects/React Github Jobs App/src/useFetchJobs.jsx"],"names":["useReducer","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","reducer","state","action","type","useFetchJobs","params","page","dispatch","jobs","loading","payload","x","error"],"mappings":";;AAAA,SAASA,UAAT,QAA0B,OAA1B;AAEA,MAAMC,OAAO,GAAC;AACVC,EAAAA,YAAY,EAAE,cADJ;AAEVC,EAAAA,QAAQ,EAAE,UAFA;AAGVC,EAAAA,KAAK,EAAE;AAHG,CAAd;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAO,CAACC,YAAb;AAGA,SAAKD,OAAO,CAACE,QAAb;AAEA,SAAKF,OAAO,CAACG,KAAb;AAGA;AACA,aAAOE,KAAP;AAVJ;AAYH;;AAED,eAAe,SAASG,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAAA;;AAC/C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBZ,UAAU,CAACK,OAAD,EAAU;AAACQ,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAV,CAApC;AAEAF,EAAAA,QAAQ,CAAC;AAAEJ,IAAAA,IAAI,EAAE,OAAR;AAAiBO,IAAAA,OAAO,EAAE;AAACC,MAAAA,CAAC,EAAC;AAAH;AAA1B,GAAD,CAAR;AACA,SAAO;AACHH,IAAAA,IAAI,EAAE,EADH;AAEHC,IAAAA,OAAO,EAAE,KAFN;AAGHG,IAAAA,KAAK,EAAE;AAHJ,GAAP;AAKH;;GATuBR,Y","sourcesContent":["import { useReducer} from 'react'\n\nconst ACTIONS={\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error'\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n\n\n        case ACTIONS.GET_DATA:\n            \n        case ACTIONS.ERROR:\n\n\n        default: \n        return state;\n        }\n}\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true})\n\n    dispatch({ type: 'hello', payload: {x:3}})\n    return {\n        jobs: [],\n        loading: false,\n        error: false\n    }\n}"]},"metadata":{},"sourceType":"module"}