{"ast":null,"code":"var _jsxFileName = \"/Users/therandomfool/Desktop/code projects/React Github Jobs App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from './Job';\nimport JobsPagination from './JobsPagination';\nimport SearchForms from './SearchForms.jax';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [params, setParams] = useState([]);\n  const [page, setPage] = useState(1);\n  const {\n    jobs,\n    loading,\n    error,\n    hasNextPage\n  } = useFetchJobs(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams(prevParams => {\n      return { ...prevParams,\n        [param]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"GitHub Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JobsPagination, {\n      page: page,\n      setPage: setPage,\n      hasNextPage: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error. Try Refreshing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), jobs.map(job => {\n      return /*#__PURE__*/_jsxDEV(Job, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(JobsPagination, {\n      page: page,\n      setPage: setPage,\n      hasNextPage: hasNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"RBtTcvH0B255yTf8NgAok8Edx8M=\", false, function () {\n  return [useFetchJobs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/therandomfool/Desktop/code projects/React Github Jobs App/src/App.js"],"names":["React","useState","useFetchJobs","Container","Job","JobsPagination","SearchForms","App","params","setParams","page","setPage","jobs","loading","error","hasNextPage","handleParamChange","e","param","target","name","value","prevParams","map","job","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAuCb,YAAY,CAACM,MAAD,EAASE,IAAT,CAAzD;;AAEA,WAASM,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,UAAMC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAAvB;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAF,IAAAA,SAAS,CAACa,UAAU,IAAI;AACtB,aAAO,EAAE,GAAGA,UAAL;AAAiB,SAACJ,KAAD,GAASG;AAA1B,OAAP;AACD,KAFQ,CAAT;AAGD;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEX,IAAtB;AAA4B,MAAA,OAAO,EAAEC,OAArC;AAA+C,MAAA,WAAW,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGE,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd,EAKGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALZ,EAMGF,IAAI,CAACW,GAAL,CAASC,GAAG,IAAI;AACf,0BAAO,QAAC,GAAD;AAAkB,QAAA,GAAG,EAAIA;AAAzB,SAAUA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CANH,eASE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEf,IAAtB;AAA4B,MAAA,OAAO,EAAEC,OAArC;AAA8C,MAAA,WAAW,EAAEI;AAA3D;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;GA3BQR,G;UAGsCL,Y;;;KAHtCK,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from './Job'\nimport JobsPagination from './JobsPagination';\nimport SearchForms from './SearchForms.jax';\n\nfunction App() {\n  const [params, setParams] = useState([])\n  const [page, setPage] = useState(1)\n  const {jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  function handleParamChange(e) {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value}\n    })\n  }\n\n  return (\n      <Container className='my-5'>\n        <h1 className='mb-4'>GitHub Jobs</h1>\n        <SearchForm></SearchForm>\n        <JobsPagination page={page} setPage={setPage}  hasNextPage={true}/>\n        {loading && <h1>Loading...</h1>}\n        {error && <h1>Error. Try Refreshing...</h1>}\n        {jobs.map(job => {\n          return <Job key={job.id} job = {job} />\n        })}\n        <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      </Container>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}