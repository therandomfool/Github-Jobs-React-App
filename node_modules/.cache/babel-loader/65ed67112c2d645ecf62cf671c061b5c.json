{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'UPDATE-HAS-NEXT-PAGE'\n}; // limited access for sev purposes\n// Proxy server to get around CORS https://cors-anywhere.herokuapp.com/\n\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUEST\n    });\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n      console.log(res.data);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken.cancel();\n    };\n  }, [params, page]);\n  return state;\n}\n\n_s(useFetchJobs, \"/FGFJNgqbogxIpU11lJeDoO2Ht8=\");","map":{"version":3,"sources":["/Users/therandomfool/Desktop/code projects/React Github Jobs App/src/useFetchJobs.jsx"],"names":["useReducer","useEffect","axios","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","dispatch","cancelToken","CancelToken","source","get","token","markdown","then","res","data","console","log","catch","e","isCancel","cancel"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAC;AACVC,EAAAA,YAAY,EAAE,cADJ;AAEVC,EAAAA,QAAQ,EAAE,UAFA;AAGVC,EAAAA,KAAK,EAAE,OAHG;AAIVC,EAAAA,oBAAoB,EAAE;AAJZ,CAAd,C,CAOA;AACA;;AACA,MAAMC,QAAQ,GAAG,4EAAjB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,OAAO,CAACC,YAAb;AACI,aAAQ;AAACS,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,IAAI,EAAE;AAAtB,OAAR;;AAEJ,SAAKX,OAAO,CAACE,QAAb;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAAjD,OAAP;;AAEJ,SAAKX,OAAO,CAACG,KAAb;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BG,QAAAA,KAAK,EAAEL,MAAM,CAACI,OAAP,CAAeC,KAAlD;AAAyDF,QAAAA,IAAI,EAAE;AAA/D,OAAP;;AACF,SAAKX,OAAO,CAACI,oBAAb;AACI,aAAO,EAAE,GAAGG,KAAL;AAAaO,QAAAA,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE;AAAzC,OAAP;;AACJ;AACI,aAAOP,KAAP;AAZR;AAcH;;AAGD,eAAe,SAASQ,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAAA;;AAC/C,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBrB,UAAU,CAACS,OAAD,EAAU;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWD,IAAAA,OAAO,EAAE;AAApB,GAAV,CAApC;AACAZ,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMqB,WAAW,GAAGpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,EAApB;AACAH,IAAAA,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAET,OAAO,CAACC;AAAf,KAAD,CAAR;AACAF,IAAAA,KAAK,CAACuB,GAAN,CAAUjB,QAAV,EAAoB;AAChBc,MAAAA,WAAW,EAAEA,WAAW,CAACI,KADT;AAEhBP,MAAAA,MAAM,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,IAAZ;AAAkBP,QAAAA,IAAI,EAAEA,IAAxB;AAA8B,WAAGD;AAAjC;AAFQ,KAApB,EAGGS,IAHH,CAGQC,GAAG,IAAI;AACXR,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAET,OAAO,CAACE,QAAhB;AAA0BU,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAI,EAAEe,GAAG,CAACC;AAAZ;AAAnC,OAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACH,KAND,EAMGG,KANH,CAMUC,CAAC,IAAG;AACV,UAAGhC,KAAK,CAACiC,QAAN,CAAeD,CAAf,CAAH,EAAsB;AACtBb,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAET,OAAO,CAACG,KAAhB;AAAuBS,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEkB;AAAT;AAAhC,OAAD,CAAR;AACH,KATD;AAWA,WAAO,MAAM;AACTZ,MAAAA,WAAW,CAACc,MAAZ;AACH,KAFD;AAGH,GAjBQ,EAiBN,CAACjB,MAAD,EAASC,IAAT,CAjBM,CAAT;AAmBA,SAAOV,KAAP;AACH;;GAtBuBQ,Y","sourcesContent":["import { useReducer, useEffect} from 'react'\nimport axios from 'axios'\n\nconst ACTIONS={\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'UPDATE-HAS-NEXT-PAGE'\n}\n\n// limited access for sev purposes\n// Proxy server to get around CORS https://cors-anywhere.herokuapp.com/\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return  {loading: true, jobs: []}\n\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs}\n            \n        case ACTIONS.ERROR:\n          return { ...state, loading: false, error: action.payload.error, jobs: [] }  \n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return { ...state,  hasNextPage: action.payload.hasNextPage}\n        default: \n            return state;\n        }\n}\n\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true})\n    useEffect(() =>{\n        const cancelToken = axios.CancelToken.source()\n        dispatch({type: ACTIONS.MAKE_REQUEST})\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken.token, \n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } }) \n            console.log(res.data)\n        }).catch( e=> {\n            if(axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } }) \n        })\n\n        return () => {\n            cancelToken.cancel()\n        }\n    }, [params, page])\n    \n    return state;\n}"]},"metadata":{},"sourceType":"module"}