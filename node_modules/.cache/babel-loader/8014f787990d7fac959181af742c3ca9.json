{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  dispatch({\n    type: 'hello',\n    payload: {\n      x: 3\n    }\n  });\n  return {\n    jobs: [],\n    loading: false,\n    error: false\n  };\n}\n\n_s(useFetchJobs, \"obrs/+YaLhfARPAv0nZXhVQD5MY=\");","map":{"version":3,"sources":["/Users/therandomfool/Desktop/code projects/React Github Jobs App/src/useFetchJobs.jsx"],"names":["useReducer","ACTIONS","MAKE_REQUEST","GET_DATA","ERROR","reducer","state","action","type","loading","jobs","payload","error","useFetchJobs","params","page","dispatch","x"],"mappings":";;AAAA,SAASA,UAAT,QAA0B,OAA1B;AAEA,MAAMC,OAAO,GAAC;AACVC,EAAAA,YAAY,EAAE,cADJ;AAEVC,EAAAA,QAAQ,EAAE,UAFA;AAGVC,EAAAA,KAAK,EAAE;AAHG,CAAd;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,OAAO,CAACC,YAAb;AACI,aAAQ;AAACO,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,IAAI,EAAE;AAAtB,OAAR;;AAEJ,SAAKT,OAAO,CAACE,QAAb;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAAjD,OAAP;;AAEJ,SAAKT,OAAO,CAACG,KAAb;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BG,QAAAA,KAAK,EAAEL,MAAM,CAACI,OAAP,CAAeC,KAAlD;AAAyDF,QAAAA,IAAI,EAAE;AAA/D,OAAP;;AAEF;AACA,aAAOJ,KAAP;AAXJ;AAaH;;AAED,eAAe,SAASO,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AAAA;;AAC/C,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBhB,UAAU,CAACK,OAAD,EAAU;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWD,IAAAA,OAAO,EAAE;AAApB,GAAV,CAApC;AAEAO,EAAAA,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAE,OAAR;AAAiBG,IAAAA,OAAO,EAAE;AAACM,MAAAA,CAAC,EAAC;AAAH;AAA1B,GAAD,CAAR;AACA,SAAO;AACHP,IAAAA,IAAI,EAAE,EADH;AAEHD,IAAAA,OAAO,EAAE,KAFN;AAGHG,IAAAA,KAAK,EAAE;AAHJ,GAAP;AAKH;;GATuBC,Y","sourcesContent":["import { useReducer} from 'react'\n\nconst ACTIONS={\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error'\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return  {loading: true, jobs: []}\n\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs}\n            \n        case ACTIONS.ERROR:\n          return { ...state, loading: false, error: action.payload.error, jobs: [] }  \n\n        default: \n        return state;\n        }\n}\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true})\n\n    dispatch({ type: 'hello', payload: {x:3}})\n    return {\n        jobs: [],\n        loading: false,\n        error: false\n    }\n}"]},"metadata":{},"sourceType":"module"}